#pragma once

#include "Globals.h"

// PST evaluation based on https://www.chessprogramming.org/PeSTO%27s_Evaluation_Function

inline int MirrorSquare(int square) {
    return square ^ 56;
}

namespace EvalParams {
    constexpr int PhaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

    constexpr int PieceValuesMg[6] = { 100, 320, 330, 500, 950, 0 };
    constexpr int PieceValuesEg[6] = { 110, 290, 330, 550, 900, 0 };

    constexpr int TempoBonus = 10;

    constexpr int BishopPairBonus = 30;

    constexpr int RookOpenFileBonus = 15;
    constexpr int RookSemiOpenFileBonus = 8;
    constexpr int QueenOpenFileBonus = 8;
    constexpr int QueenSemiOpenFileBonus = 5;

    constexpr int CentreControlBonus = 5;
    constexpr int ExtendedCentreControlBonus = 3;

    // king safety (middle game)
    constexpr int KingVirtualAttackPenalty = 2;
    constexpr int ClosePawnShieldBonus = 10;
    constexpr int FarPawnShieldBonus = 3;
    constexpr int KingOpenFilePenalty = 15;

    // pawn structure
    constexpr int StackedPawnPenalty = 5;
    constexpr int IsolatedPawnPenalty = 10;
    constexpr int DefendedPawnBonus = 7;
    constexpr int PassedPawnValue[8] = { 0, 20, 30, 40, 55, 75, 100, 0 };

    constexpr int MobilityValueMg[12] = { 0, 4, 3, 1, 1, 0, 0, 4, 3, 1, 1, 0 };
    constexpr int MobilityValueEg[12] = { 0, 2, 3, 3, 1, 0, 0, 2, 3, 3, 1, 0 };

    constexpr int CentreManhattenDistance[64] = {
        6, 5, 4, 3, 3, 4, 5, 6,
        5, 4, 3, 2, 2, 3, 4, 5,
        4, 3, 2, 1, 1, 2, 3, 4,
        3, 2, 1, 0, 0, 1, 2, 3,
        3, 2, 1, 0, 0, 1, 2, 3,
        4, 3, 2, 1, 1, 2, 3, 4,
        5, 4, 3, 2, 2, 3, 4, 5,
        6, 5, 4, 3, 3, 4, 5, 6
    };

    constexpr int PawnTableMg[64] = {
         0,   0,   0,   0,   0,   0,   0,   0,
        50,  50,  50,  50,  50,  50,  50,  50,
        10,  10,  20,  30,  30,  20,  10,  10,
         5,   5,  10,  20,  20,  10,   5,   5,
         0,   0,   0,  25,  25,   0,   0,   0,
         5,  -5, -10,   0,   0, -10,  -5,   5,
         5,  10,  10, -25, -30,  10,  10,   5,
         0,   0,   0,   0,   0,   0,   0,   0
    };

    constexpr int PawnTableEg[64] = {
          0,   0,   0,   0,   0,   0,   0,   0,
         50,  50,  50,  50,  50,  50,  50,  50,
         35,  35,  35,  35,  35,  35,  35,  35,
         20,  20,  20,  20,  20,  20,  20,  20,
          5,   5,   5,   5,   5,   5,   5,   5,
        -10, -10, -10, -10, -10, -10, -10, -10,
        -10, -10, -10, -10, -10, -10, -10, -10,
          0,   0,   0,   0,   0,   0,   0,   0
    };

        constexpr int KnightTableMg[64] = {
        -25, -20, -15, -15, -15, -15, -20, -25,
        -20, -15,   0,   0,   0,   0, -15, -20,
        -15,   0,   8,  13,  13,   8,   0, -15,
        -15,   8,  13,  15,  15,  13,   8, -15,
        -15,   0,  13,  15,  15,  13,   0, -15,
        -15,   8,  10,  13,  13,  10,   8, -15,
        -20, -15,   0,   8,   8,   0, -15, -20,
        -25, -20, -15, -15, -15, -15, -23, -25
    };

    constexpr int KnightTableEg[64] = {
        -20, -15, -10, -10, -10, -10, -15, -20,
        -15, -10,   0,   0,   0,   0, -10, -15,
        -10,   0,   3,   8,   8,   3,   0, -10,
        -10,   3,   8,  10,  10,   8,   3, -10,
        -10,   0,   8,  10,  10,   8,   0, -10,
        -10,   3,   5,   8,   8,   5,   3, -10,
        -15, -10,   0,   3,   3,   0, -10, -15,
        -20, -15, -10, -10, -10, -10, -15, -20
    };

    constexpr int BishopTableMg[64] = {
        -15, -10, -10, -10, -10, -10, -10, -15,
        -10,   0,   0,   0,   0,   0,   0, -10,
        -10,   0,   8,  13,  13,   8,   0, -10,
        -10,   8,   8,  13,  13,   8,   8, -10,
        -10,   0,  13,  13,  13,  13,   0, -10,
        -10,  13,  13,  13,  13,  13,  13, -10,
        -10,   8,   0,   0,   0,   0,   8, -10,
        -15, -10, -10, -10, -10, -10, -10, -15
    };

    constexpr int BishopTableEg[64] = {
        -10,  -5,  -5,  -5,  -5,  -5,  -5, -10,
         -5,   0,   0,   0,   0,   0,   0,  -5,
         -5,   0,   3,   5,   5,   3,   0,  -5,
         -5,   3,   3,   5,   5,   3,   3,  -5,
         -5,   0,   5,   5,   5,   5,   0,  -5,
         -5,   5,   5,   5,   5,   5,   5,  -5,
         -5,   3,   0,   0,   0,   0,   3,  -5,
        -10,  -5,  -5,  -5, - 5,  -5,  -5, -10
    };

    constexpr int RookTableMg[64] = {
         0,   0,   0,   5,   5,   0,   0,   0,
         5,  10,  10,  10,  10,  10,  10,   5,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
         0,   0,   3,   6,   6,   4,   0,   0
    };

    constexpr int RookTableEg[64] = {
         0,   0,   0,   5,   5,   0,   0,   0,
         5,  10,  10,  10,  10,  10,  10,   5,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
        -4,   0,   0,   4,   4,   0,   0,  -4,
         0,   0,   3,   6,   6,   4,   0,   0
    };

    constexpr int QueenTableMg[64] = {
         -5,  -5,  -5,  -3,  -3,  -5,  -5, -10,
         -5,   0,   0,   0,   0,   0,   0,  -5,
         -5,   0,   3,   3,   3,   3,   0,  -5,
         -3,   0,   3,   3,   3,   3,   0,  -3,
          0,   0,   3,   3,   3,   3,   0,  -3,
         -5,   3,   3,   3,   3,   3,   0,  -5,
         -5,   0,   3,   0,   0,   0,   0,  -5,
        -10,  -5,  -5,  -3,  -3,  -5,  -5, -10
    };

    constexpr int QueenTableEg[64] = {
         -5,  -5,  -5,  -3,  -3,  -5,  -5, -10,
         -5,   0,   0,   0,   0,   0,   0,  -5,
         -5,   0,   3,   3,   3,   3,   0,  -5,
         -3,   0,   3,   3,   3,   3,   0,  -3,
          0,   0,   3,   3,   3,   3,   0,  -3,
         -5,   3,   3,   3,   3,   3,   0,  -5,
         -5,   0,   3,   0,   0,   0,   0,  -5,
        -10,  -5,  -5,  -3,  -3,  -5,  -5, -10
    };

    constexpr int KingTableMg[64] = {
        -60, -60, -60, -60, -60, -60, -60, -60,
        -60, -60, -60, -60, -60, -60, -60, -60,
        -60, -60, -60, -60, -60, -60, -60, -60,
        -60, -60, -60, -60, -60, -60, -60, -60,
        -60, -60, -60, -60, -60, -60, -60, -60,
        -60, -60, -60, -60, -60, -60, -60, -60,
        -40, -40, -40, -40, -40, -40, -40, -40,
         20,  40,  30, -30,   0, -30,  40,  20
    };

    constexpr int KingTableEg[64] = {
        -30, -20, -10,   0,   0, -10, -20, -30,
        -20, -10,   0,  10,  10,   0, -10, -20,
        -20,   0,  10,  20,  20,  10,   0, -20,
        -20,   0,  10,  20,  20,  10,   0, -20,
        -20,   0,  10,  20,  20,  10,   0, -20,
        -20, -10,   0,  10,  10,   0, -10, -20,
        -30, -20, -10,   0,   0, -10, -20, -30,
        -40, -30, -20, -10, -10, -20, -30, -40
    };
}